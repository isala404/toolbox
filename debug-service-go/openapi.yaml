---
openapi: 3.0.0
info:
  title: FastAPI
  version: 0.1.0
paths:
  "/healthz":
    get:
      summary: Healthz
      operationId: healthz_healthz_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
  "/readiness":
    get:
      summary: Readiness
      operationId: readiness_readiness_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
  "/debug":
    post:
      summary: Debug Endpoint
      operationId: debug_endpoint_debug_post
      parameters:
      - name: seconds
        in: query
        required: false
        schema:
          anyOf:
          - type: integer
          - type: 'null'
          title: Seconds
      - name: status_code
        in: query
        required: false
        schema:
          type: integer
          default: 200
          title: Status Code
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
  "/log":
    post:
      summary: Log
      operationId: log_log_post
      parameters:
      - name: message
        in: query
        required: true
        schema:
          type: string
          title: Message
      - name: level
        in: query
        required: true
        schema:
          type: string
          title: Level
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
  "/proxy":
    post:
      summary: Proxy
      operationId: proxy_proxy_post
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/ProxyRequest"
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
  "/custom-headers":
    post:
      summary: Custom Headers
      operationId: custom_headers_custom_headers_post
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              type: object
              title: Custom Headers
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
  "/proxy-http-bin":
    get:
      summary: Proxy Http
      operationId: proxy_http_proxy_http_bin_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
  "/html":
    get:
      summary: Html
      operationId: html_html_get
      responses:
        '200':
          description: Successful Response
          content:
            text/html:
              schema:
                type: string
  "/xml":
    get:
      summary: Xml
      operationId: xml_xml_get
      responses:
        '200':
          description: Successful Response
          content:
            text/html:
              schema:
                type: string
  "/upload":
    post:
      summary: Upload
      operationId: upload_upload_post
      requestBody:
        content:
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/Body_upload_upload_post"
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
  "/download":
    get:
      summary: Download
      operationId: download_download_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
  "/stateless":
    get:
      summary: Stateless
      operationId: stateless_stateless_get
      parameters:
      - name: seconds
        in: query
        required: false
        schema:
          anyOf:
          - type: integer
          - type: 'null'
          title: Seconds
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
  "/sse":
    get:
      summary: Sse
      operationId: sse_sse_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
  "/crash":
    get:
      summary: Crash
      operationId: crash_crash_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
  "/shutdown":
    get:
      summary: Shutdown
      operationId: shutdown_shutdown_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
  "/stress/cpu":
    get:
      summary: Stress Cpu
      operationId: stress_cpu_stress_cpu_get
      parameters:
      - name: cpu_percent
        in: query
        required: true
        schema:
          type: integer
          title: Cpu Percent
      - name: duration
        in: query
        required: true
        schema:
          type: integer
          title: Duration
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
  "/stress/memory":
    get:
      summary: Stress Memory
      operationId: stress_memory_stress_memory_get
      parameters:
      - name: memory_percent
        in: query
        required: true
        schema:
          type: integer
          title: Memory Percent
      - name: duration
        in: query
        required: true
        schema:
          type: integer
          title: Duration
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
  "/reset":
    get:
      summary: Reset
      operationId: reset_reset_get
      parameters:
      - name: do
        in: query
        required: false
        schema:
          type: boolean
          default: false
          title: Do
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
components:
  schemas:
    Body_upload_upload_post:
      properties:
        file:
          type: string
          format: binary
          title: File
      type: object
      required:
      - file
      title: Body_upload_upload_post
    HTTPValidationError:
      properties:
        detail:
          items:
            "$ref": "#/components/schemas/ValidationError"
          type: array
          title: Detail
      type: object
      title: HTTPValidationError
    ProxyRequest:
      properties:
        url:
          type: string
          title: Url
        method:
          type: string
          title: Method
        payload:
          type: object
          title: Payload
      type: object
      required:
      - url
      - method
      title: ProxyRequest
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
            - type: string
            - type: integer
          type: array
          title: Location
        msg:
          type: string
          title: Message
        type:
          type: string
          title: Error Type
      type: object
      required:
      - loc
      - msg
      - type
      title: ValidationError
